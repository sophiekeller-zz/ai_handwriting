{"version":3,"sources":["logo.svg","NavBar.js","Uploader.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","Uploader","useState","error","setError","file","setFile","loading","setLoading","result","setResult","fileUrl","setFileUrl","numberRight","setNumberRight","feedback","setFeedback","statistics","setStatistics","method","setMethod","useEffect","fetch","then","response","json","data","console","log","process_photo","imageData","FormData","append","body","style","marginLeft","display","flexDirection","paddingTop","alignItems","justifyContent","marginBottom","color","fontSize","size","marginTop","Row","Col","md","Form","Group","controlId","Control","onChange","e","URL","createObjectURL","target","files","type","name","Select","value","Button","backgroundColor","border","onClick","Spinner","animation","Image","src","rounded","width","word_prediction","probability","className","isNaN","count","length","proportionRight","newInfo","total_data","probabilities_sum","headers","JSON","stringify","newValue","App","setResults","backgroundImage","minHeight","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca26e699.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from \"react\";\n\nimport { Form, Button, Nav, Navbar } from \"react-bootstrap\";\n\nfunction NavBar() {\n  return (\n    <Navbar\n      variant=\"dark\"\n      expand=\"lg\"\n      style={{\n        backgroundImage: \"linear-gradient(#a561ff, #6d02fa)\",\n        paddingLeft: \"40px\",\n        paddingRight: \"40px\",\n        color: \"white\",\n      }}\n    >\n      <Navbar.Brand href=\"#home\">Handwriting Magic</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"me-auto\">\n          <Nav.Link href=\"/\">Home</Nav.Link>\n          <Nav.Link href=\"/about\">About</Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nexport default NavBar;\n","import React, { useState, useEffect } from \"react\";\nimport { Col, Row, Button, Form, Alert, Image, Spinner } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport { Gem } from \"react-bootstrap-icons\";\n\nfunction Uploader() {\n  const [error, setError] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [result, setResult] = useState(null);\n  const [fileUrl, setFileUrl] = useState(\"\");\n  const [numberRight, setNumberRight] = useState(\"\");\n  const [feedback, setFeedback] = useState(\"\");\n  const [statistics, setStatistics] = useState(null);\n  const [method, setMethod] = useState(0);\n\n  useEffect(() => {\n    fetch(\"/get_statistics\")\n      .then((response) => response.json())\n      .then((data) => {\n        if (data[\"error\"]) {\n          console.log(data[\"error\"]);\n        } else {\n          setStatistics(data);\n        }\n      });\n  }, []);\n\n  const handleSubmit = () => {\n    process_photo();\n  };\n\n  const process_photo = () => {\n    if (!file) {\n      setError(\"Please upload a file to decode.\");\n      return;\n    }\n    if (result) {\n      setError(\"Please refresh the page to try another word.\");\n      return;\n    }\n    setLoading(true);\n    let imageData = new FormData();\n    console.log(file);\n    console.log(method);\n    imageData.append(\"image\", file);\n    imageData.append(\"method\", method);\n\n    fetch(\"/process_photo\", {\n      method: \"POST\",\n      body: imageData,\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data[\"error\"]) {\n          console.log(data[\"error\"]);\n        } else {\n          setResult(data);\n          setLoading(false);\n        }\n      });\n  };\n\n  const submitCount = () => {\n    if (isNaN(numberRight) || numberRight === \"\") {\n      setFeedback(\"Please enter a number.\");\n    } else if (!file) {\n      setFeedback(\"No word has been decoded!\");\n    } else {\n      let count = result.word_prediction.length;\n      let proportionRight = numberRight / count;\n\n      const newInfo = {\n        total_data: statistics.total_data + 1,\n        probabilities_sum: statistics.probabilities_sum + proportionRight,\n      };\n      setStatistics(newInfo);\n      fetch(\"/update_statistics\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ newValue: proportionRight }),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          setFeedback(\"Thanks for your feedback!\");\n        });\n    }\n  };\n\n  return (\n    <div\n      style={{\n        marginLeft: \"20px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        paddingTop: \"25vh\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      }}\n    >\n      <h1\n        style={{\n          marginBottom: \"10px\",\n          color: \"white\",\n          fontSize: \"50px\",\n        }}\n      >\n        Handwriting Magic\n      </h1>\n      <Gem size={60} />\n      <h5\n        style={{\n          marginBottom: \"10px\",\n          marginTop: \"20px\",\n          color: \"white\",\n        }}\n      >\n        Try it out!\n      </h5>\n      <Row style={{ marginTop: \"10px\" }}>\n        <Col md=\"4\">\n          <Form.Group controlId=\"formFile\">\n            <Form.Control\n              onChange={(e) => {\n                setFileUrl(URL.createObjectURL(e.target.files[0]));\n                setFile(e.target.files[0]);\n              }}\n              type=\"file\"\n              name=\"logo\"\n            />\n          </Form.Group>\n        </Col>\n        <Col md=\"4\">\n          <Form.Select\n            onChange={(e) => {\n              setMethod(e.target.value);\n            }}\n            value={method}\n          >\n            <option value=\"0\">Best Path</option>\n            <option value=\"1\">Beam Search</option>\n          </Form.Select>\n        </Col>\n        <Col md=\"3\">\n          <Button\n            style={{\n              backgroundColor: \"#6d02fa\",\n              border: \"none\",\n            }}\n            onClick={handleSubmit}\n          >\n            Go\n          </Button>\n        </Col>\n        <Col md=\"1\">{loading && <Spinner animation=\"border\" />}</Col>\n      </Row>\n      {error && <div style={{ marginTop: \"10px\" }}>{error}</div>}\n      <Image src={fileUrl} rounded style={{ width: \"200px\" }} />\n      {result && (\n        <div>\n          <h4\n            style={{\n              color: \"white\",\n            }}\n          >\n            Result: {result.word_prediction}\n          </h4>\n          <h4\n            style={{\n              color: \"white\",\n            }}\n          >\n            Probability of Correctness: {result.probability}\n          </h4>\n        </div>\n      )}\n      <h5\n        style={{\n          marginBottom: \"10px\",\n          marginTop: \"20px\",\n          color: \"white\",\n        }}\n      >\n        How many letters did we get right?\n      </h5>\n      <Row>\n        <Col md=\"9\">\n          <Form.Group className=\"mb-3\">\n            <Form.Control\n              onChange={(e) => {\n                setNumberRight(e.target.value);\n              }}\n              type=\"text\"\n            />\n          </Form.Group>\n        </Col>\n        <Col md=\"3\">\n          <Button\n            style={{\n              backgroundColor: \"#6d02fa\",\n              border: \"none\",\n            }}\n            onClick={submitCount}\n          >\n            Submit\n          </Button>\n        </Col>\n        <div\n          style={{\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            display: \"flex\",\n          }}\n        >\n          {feedback && <div>{feedback}</div>}\n        </div>\n      </Row>\n    </div>\n  );\n}\n\nexport default Uploader;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport NavBar from \"./NavBar.js\";\nimport Uploader from \"./Uploader.js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n\nfunction App() {\n  const [results, setResults] = useState(null);\n\n  return (\n    <div\n      style={{\n        backgroundImage: \"linear-gradient(#a561ff, #6d02fa)\",\n        color: \"white\",\n        minHeight: \"100vh\",\n      }}\n    >\n      <Router>\n        {/* <NavBar /> */}\n        <Routes>\n          <Route\n            exact\n            path=\"/\"\n            element={<Uploader setResults={setResults} />}\n          ></Route>\n          <Route exact path=\"/about\"></Route>\n          <Route exact path=\"/results\"></Route>\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}