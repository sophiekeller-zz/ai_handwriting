{"ast":null,"code":"var _jsxFileName = \"/Users/sophiekeller/Desktop/handwriting/handwriting-magic/src/Uploader.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Col, Row, Button, Form, Alert, Modal } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Uploader() {\n  _s();\n\n  const [error, setError] = useState(\"\");\n  const [file, setFile] = useState(null);\n\n  const updateReportSettings = values => {\n    if (file) {\n      let data = new FormData();\n      data.append(\"logo\", file); //   fetch(\"/update_firm_logo\", {\n      //     method: \"POST\",\n      //     body: data,\n      //   })\n      //     .then((response) => response.json())\n      //     .then(() => {\n      //       fetch(`/firm_info`)\n      //         .then((res) => res.json())\n      //         .then((info) => {\n      //           setInitialValues(info);\n      //         });\n      //     });\n    }\n\n    const callback = data => {\n      if (data[\"Error\"]) {\n        setError(data[\"Error\"]);\n      } else {\n        setError(\"\");\n      }\n    }; // post(values, \"/update_report_settings\", callback);\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: \"20px\",\n      marginTop: \"25vh\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        marginBottom: \"10px\",\n        color: \"#6d02fa\"\n      },\n      children: \"Upload Your Handwriting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      onSubmit: values => {\n        console.log(\"submitting\");\n      },\n      children: _ref => {\n        let {\n          values,\n          handleChange,\n          handleSubmit\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formFile\",\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              onChange: e => {\n                setFile(e.target.files[0]);\n              },\n              type: \"file\",\n              name: \"logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"dark\",\n            type: \"submit\",\n            style: {\n              marginTop: \"25px\",\n              marginBottom: \"10px\"\n            },\n            children: \"Go\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), error !== \"\" && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"danger\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Uploader, \"8NnPEk4GSyS+qW8o3DmCbj8jW5w=\");\n\n_c = Uploader;\nexport default Uploader;\n\nvar _c;\n\n$RefreshReg$(_c, \"Uploader\");","map":{"version":3,"sources":["/Users/sophiekeller/Desktop/handwriting/handwriting-magic/src/Uploader.js"],"names":["React","useState","useEffect","Col","Row","Button","Form","Alert","Modal","Formik","Uploader","error","setError","file","setFile","updateReportSettings","values","data","FormData","append","callback","marginLeft","marginTop","display","flexDirection","alignItems","marginBottom","color","console","log","handleChange","handleSubmit","e","target","files"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Col, Row, Button, Form, Alert, Modal } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\n\nfunction Uploader() {\n  const [error, setError] = useState(\"\");\n  const [file, setFile] = useState(null);\n\n  const updateReportSettings = (values) => {\n    if (file) {\n      let data = new FormData();\n      data.append(\"logo\", file);\n\n      //   fetch(\"/update_firm_logo\", {\n      //     method: \"POST\",\n      //     body: data,\n      //   })\n      //     .then((response) => response.json())\n      //     .then(() => {\n      //       fetch(`/firm_info`)\n      //         .then((res) => res.json())\n      //         .then((info) => {\n      //           setInitialValues(info);\n      //         });\n      //     });\n    }\n\n    const callback = (data) => {\n      if (data[\"Error\"]) {\n        setError(data[\"Error\"]);\n      } else {\n        setError(\"\");\n      }\n    };\n    // post(values, \"/update_report_settings\", callback);\n  };\n\n  return (\n    <div\n      style={{\n        marginLeft: \"20px\",\n        marginTop: \"25vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n      }}\n    >\n      <h1\n        style={{\n          marginBottom: \"10px\",\n          color: \"#6d02fa\",\n        }}\n      >\n        Upload Your Handwriting\n      </h1>\n      <Formik\n        onSubmit={(values) => {\n          console.log(\"submitting\");\n        }}\n      >\n        {({ values, handleChange, handleSubmit }) => (\n          <Form onSubmit={handleSubmit}>\n            <Form.Group controlId=\"formFile\" className=\"mb-3\">\n              <Form.Control\n                onChange={(e) => {\n                  setFile(e.target.files[0]);\n                }}\n                type=\"file\"\n                name=\"logo\"\n              />\n            </Form.Group>\n\n            <Button\n              variant=\"dark\"\n              type=\"submit\"\n              style={{ marginTop: \"25px\", marginBottom: \"10px\" }}\n            >\n              Go\n            </Button>\n            {error !== \"\" && <Alert variant={\"danger\"}>{error}</Alert>}\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default Uploader;\n"]},"metadata":{},"sourceType":"module"}